# -*- coding: utf-8 -*-
"""AluraStoreLatam.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YSv0pqt7ceHWpMvWtIZxqb7oR-Xi1nI6

### Importación de datos
"""

import pandas as pd

url = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_1%20.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_4.csv"

tienda = pd.read_csv(url)
tienda2 = pd.read_csv(url2)
tienda3 = pd.read_csv(url3)
tienda4 = pd.read_csv(url4)

tienda.head()

"""#1. Análisis de facturación


"""

import pandas as pd

# Datos simulados
data = {
    'Producto': ['Asistente virtual', 'Mesa de comedor', 'Juego de mesa', 'Microondas', 'Silla de oficina'],
    'Categoría del Producto': ['Electrónicos', 'Muebles', 'Juguetes', 'Electrodomésticos', 'Muebles'],
    'Precio': [164300.0, 192300.0, 209600.0, 757500.0, 335200.0],
    'Costo de envío': [6900.0, 8400.0, 15900.0, 41000.0, 20200.0],
    'Fecha de Compra': ['16/01/2021', '18/05/2022', '15/03/2021', '03/05/2022', '07/11/2020'],
    'Vendedor': ['Pedro Gomez', 'Beatriz Morales', 'Juan Fernandez', 'Juan Fernandez', 'Maria Alfonso'],
    'Lugar de Compra': ['Bogotá', 'Medellín', 'Cartagena', 'Cali', 'Medellín'],
    'Calificación': [4, 1, 1, 4, 5],
    'Método de pago': ['Tarjeta de crédito', 'Tarjeta de crédito', 'Tarjeta de crédito', 'Nequi', 'Nequi'],
    'Cantidad de cuotas': [8, 4, 1, 1, 1],
    'lat': [4.60971, 6.25184, 10.39972, 3.43722, 6.25184],
    'lon': [-74.08175, -75.56359, -75.51444, -76.52250, -75.56359]
}

#  DataFrame
df = pd.DataFrame(data)

# Calculo ingresos totales por tienda
ingresos_por_tienda = df.groupby("Lugar de Compra")["Precio"].sum().reset_index()

#  resultado
print(ingresos_por_tienda)



"""# 2. Ventas por categoría"""

# Agrupar por tienda y categoría y contar cantidad de ventas
ventas_por_categoria = df.groupby(["Lugar de Compra", "Categoría del Producto"]).size().reset_index(name="Cantidad de Ventas")

# Ordenar por tienda y por cantidad descendente
ventas_ordenadas = ventas_por_categoria.sort_values(by=["Lugar de Compra", "Cantidad de Ventas"], ascending=[True, False])

print(ventas_ordenadas)



"""# 3. Calificación promedio de la tienda

"""

# Calcular calificación promedio por tienda
valoracion_promedio = df.groupby("Lugar de Compra")["Calificación"].mean().reset_index()

# Redondear a 2 decimales para mejor presentación
valoracion_promedio["Calificación"] = valoracion_promedio["Calificación"].round(2)

print(valoracion_promedio)



"""# 4. Productos más y menos vendidos"""

pip install matplotlib seaborn

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


# Contar productos vendidos por tienda
ventas_producto = df.groupby(['Lugar de Compra', 'Producto']).size().reset_index(name='Cantidad de Ventas')

# Obtener producto más y menos vendido por tienda
productos_top = ventas_producto.sort_values(['Lugar de Compra', 'Cantidad de Ventas'], ascending=[True, False])
productos_max = productos_top.groupby('Lugar de Compra').first().reset_index()
productos_min = productos_top.groupby('Lugar de Compra').last().reset_index()

# Concatenar para visualización
productos_extremos = pd.concat([
    productos_max.assign(Tipo='Más vendido'),
    productos_min.assign(Tipo='Menos vendido')
])

# Visualizar
plt.figure(figsize=(10, 6))
sns.barplot(x='Lugar de Compra', y='Cantidad de Ventas', hue='Producto', data=productos_extremos, palette='coolwarm', dodge=False)
plt.title('Productos más y menos vendidos por tienda')
plt.ylabel('Cantidad de ventas')
plt.xlabel('Tienda')
plt.legend(title='Producto')
plt.tight_layout()
plt.show()

import pandas as pd



# Contar cuántas veces se vendió cada producto por tienda
ventas_producto = df.groupby(['Lugar de Compra', 'Producto']).size().reset_index(name='Cantidad de Ventas')

# Ordenar para encontrar el más y el menos vendido por tienda
productos_ordenados = ventas_producto.sort_values(['Lugar de Compra', 'Cantidad de Ventas'], ascending=[True, False])

# Producto más vendido por tienda
productos_mas_vendidos = productos_ordenados.groupby('Lugar de Compra').first().reset_index()
productos_mas_vendidos['Tipo'] = 'Más vendido'

# Producto menos vendido por tienda
productos_menos_vendidos = productos_ordenados.groupby('Lugar de Compra').last().reset_index()
productos_menos_vendidos['Tipo'] = 'Menos vendido'

# Unir ambos resultados
productos_extremos = pd.concat([productos_mas_vendidos, productos_menos_vendidos])

# Mostrar resultados
print(productos_extremos[['Lugar de Compra', 'Producto', 'Cantidad de Ventas', 'Tipo']])

"""# 5. Envío promedio por tienda"""

# Calcular el costo de envío promedio por tienda
costo_envio_promedio = df.groupby("Lugar de Compra")["Costo de envío"].mean().reset_index()

# Redondear a 2 decimales para mejor presentación
costo_envio_promedio["Costo de envío"] = costo_envio_promedio["Costo de envío"].round(2)

# Mostrar resultados
print(costo_envio_promedio)

